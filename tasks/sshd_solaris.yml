- name: Add OS specific variables
  include_vars: "{{ ansible_os_family }}.yml"

- name: Use only SSH ver.2 protocol
  lineinfile:
    state: present
    dest: /etc/ssh/sshd_config
    regexp: '^(#)?Protocol.*'
    line: 'Protocol 2'
    insertbefore: '^Match.*'
  notify: restart sshd

- name: Disallow empty passwords for SSH logins
  lineinfile:
    state: present
    dest: /etc/ssh/sshd_config
    regexp: '^(#)?PermitEmptyPasswords.*'
    line: 'PermitEmptyPasswords no'
    insertbefore: '^Match.*'
  notify: restart sshd

- name: Disable SSH Host Based Authenthication
  lineinfile:
    state: present
    dest: /etc/ssh/sshd_config
    regexp: '^(#)?HostbasedAuthentication.*'
    line: 'HostbasedAuthentication no'
    insertbefore: '^Match.*'
  notify: restart sshd

- name: SSH must ignore .rhosts
  lineinfile:
    state: present
    dest: /etc/ssh/sshd_config
    regexp: '^(#)?IgnoreRhosts.*'
    line: 'IgnoreRhosts yes'
    insertbefore: '^Match.*'
  notify: restart sshd

- name: Configure TCP port Forwarding with ssh
  lineinfile:
    state: present
    dest: /etc/ssh/sshd_config
    regexp: '^(#)?AllowTcpForwarding.*'
    line: 'AllowTcpForwarding {{sshportforwarding}}'
    insertbefore: '^Match.*'
  notify: restart sshd

- name: Solaris - Configure ssh root login to {{sshrootlogin}}
  lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: '^(#)?PermitRootLogin.*'
    line: 'PermitRootLogin {{sshrootlogin}}'
    insertafter: '^# Valid options are yes, without-password, no.*'
    state: present
    owner: root
    group: sys
    mode: 0644
  notify: restart sshd

- name: Solaris - restrict listen to IPv4 if desired
  lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: '^ListenAddress.*'
    line: 'ListenAddress 0.0.0.0'
    insertafter: '# IPv4 only'
    owner: root
    group: sys
    mode: 0644
  notify: restart sshd
  when: sshd_solaris_restrict_ipv4

- name: Avoid trying to modify inherited_fs
  command: touch /lib/svc/method/sshd
  register: touch_sshd
  check_mode: no
  failed_when: touch_sshd.rc > 1
  changed_when: no
  args:
    warn: no

- name: Solaris - restrict listen to IPv4 if desired (svc)
  lineinfile:
    dest: /lib/svc/method/sshd
    regexp: '^\s*/usr/lib/ssh/sshd( -4|)\s*$'
    line: "\t/usr/lib/ssh/sshd -4"
    owner: root
    group: bin
    mode: 0555
  notify: restart sshd
  when:
  - sshd_solaris_restrict_ipv4
  - touch_sshd.rc == 0

- name: Solaris - Remove unwanted Port lines from sshd_config
  lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: '^#*Port (?!{{sshmainport}}|{{sshextraport}})'
    state: absent

- name: Solaris - SSH Listen on Main Port
  lineinfile:
    dest: /etc/ssh/sshd_config
    insertafter: '^# Listen port.*'
    line: 'Port {{sshmainport}}'
    state: present
    owner: root
    group: sys
    mode: 0644
  notify: restart sshd

- name: Solaris - SSH Listen on Extra Port
  lineinfile:
    dest: /etc/ssh/sshd_config
    line: 'Port {{sshextraport}}'
    insertafter: 'Port {{sshmainport}}'
    state: present
    owner: root
    group: sys
    mode: 0644
  notify: restart sshd
  when: sshextraport != 0

- name: Solaris - Create login banner as /etc/issue in Solaris
  copy:
    src: login_banner
    dest: /etc/issue
    owner: root
    group: root
    mode: 0444
  when: setloginbanner

- name: Solaris - Configure login banner in ssh
  lineinfile:
    dest: /etc/ssh/sshd_config
    line: 'Banner /etc/issue'
    regexp: '^(#)?Banner.*'
    insertafter: '# Banner to be printed before authentication starts.*'
    state: "{{ 'present' if setloginbanner else 'absent' }}"
    owner: root
    group: sys
    mode: 0644
  notify: restart sshd

- name: Configure Solaris SSH Ciphers
  lineinfile:
    dest: /etc/ssh/sshd_config
    line: "Ciphers aes256-ctr,aes192-ctr,aes128-ctr{{ ',aes128-cbc,3des-cbc,blowfish-cbc,aes192-cbc,aes256-cbc' if cbc_ciphers_enabled else '' }}{{ ',arcfour' if rc4_ciphers_enabled else '' }}"
    regexp: '^(#)?Ciphers.*$'
    insertafter: '# Default Encryption algorithms and Message Authentication codes'
    state: "{{ 'present' if ssh_enforce_ciphers else 'absent' }}"
    owner: root
    group: sys
    mode: 0644
  when:
  - ansible_distribution == 'Solaris'
  - ansible_distribution_version == '10'
  notify: restart sshd

- name: Get list of supported Solaris SSH MACs
  shell: "strings `ps -efo comm | grep sshd | uniq` | grep ^hmac | grep -v , {{ '| grep -v sha1 ' if not sha1_mac_enabled else '' }}{{ '| grep -v md5 ' if not md5_mac_enabled else '' }}{{ '| grep -v 9' if not truncated_mac_enabled else '' }}"
  args:
    executable: /usr/bin/bash
  register: supportedmacs
  changed_when: false
  check_mode: no

- name: Configure Solaris SSH MACs
  lineinfile:
    dest: /etc/ssh/sshd_config
    line: "MACS    {{ supportedmacs.stdout_lines | join(',')  }}"
    regexp: "^(#)?MACS.*"
    insertafter: '^Ciphers.*'
    state: "{{ 'present' if ( ssh_enforce_ciphers and supportedmacs.stdout != '') else 'absent' }}"
    owner: root
    group: sys
    mode: 0644
  notify: restart sshd
