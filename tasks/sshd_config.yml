---
- name: Add OS specific variables
  include_vars: "{{ ansible_os_family }}.yml"

- name: Use only SSH ver.2 protocol
  lineinfile:
    state: present
    dest: /etc/ssh/sshd_config
    regexp: '^(#)?Protocol.*'
    line: 'Protocol 2'
    insertbefore: '^Match.*'
  notify: restart sshd

- name: Disallow empty passwords for SSH logins
  lineinfile:
    state: present
    dest: /etc/ssh/sshd_config
    regexp: '^(#)?PermitEmptyPasswords.*'
    line: 'PermitEmptyPasswords no'
    insertbefore: '^Match.*'
  notify: restart sshd

- name: Disable SSH Host Based Authenthication
  lineinfile:
    state: present
    dest: /etc/ssh/sshd_config
    regexp: '^(#)?HostbasedAuthentication.*'
    line: 'HostbasedAuthentication no'
    insertbefore: '^Match.*'
  notify: restart sshd

- name: SSH must ignore .rhosts
  lineinfile:
    state: present
    dest: /etc/ssh/sshd_config
    regexp: '^(#)?IgnoreRhosts.*'
    line: 'IgnoreRhosts yes'
    insertbefore: '^Match.*'
  notify: restart sshd

- name: Configure TCP port Forwarding with ssh
  lineinfile:
    state: present
    dest: /etc/ssh/sshd_config
    regexp: '^(#)?AllowTcpForwarding.*'
    line: 'AllowTcpForwarding {{sshportforwarding}}'
    insertbefore: '^Match.*'
  notify: restart sshd

- name: Configure ssh root login to {{sshrootlogin}}
  lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: '^(#)?PermitRootLogin.*'
    line: 'PermitRootLogin {{sshrootlogin}}'
    insertbefore: '^Match.*'
    state: present
    owner: root
    group: root
    mode: 0640
  notify: restart sshd

- name: Remove unwanted Port lines from sshd_config
  lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: '^#*Port (?!{{sshmainport}}|{{sshextraport}})'
    state: absent

- name: SSH Listen on Main Port
  lineinfile:
    dest: /etc/ssh/sshd_config
    insertbefore: '^#*AddressFamily'
    line: 'Port {{sshmainport}}'
    state: present
    owner: root
    group: root
    mode: 0640
  notify: restart sshd

- name: SSH Listen on Extra Port
  lineinfile:
    dest: /etc/ssh/sshd_config
    line: 'Port {{sshextraport}}'
    insertafter: 'Port {{sshmainport}}'
    state: present
    owner: root
    group: root
    mode: 0640
  notify: restart sshd
  when: sshextraport != 0

- name: Create login banner
  copy:
    src: login_banner
    dest: /etc/login_banner
    owner: root
    group: root
    mode: 0644
  when: setloginbanner

- name: Configure login banner in ssh
  lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: '^(#)?Banner.*$'
    line: 'Banner /etc/login_banner'
    insertafter: '# no default banner path'
    state: "{{ 'present' if setloginbanner else 'absent' }}"
    owner: root
    group: root
    mode: 0640
  notify: restart sshd

- name: Add Crypt settings marker in ssh config file
  lineinfile:
    dest: /etc/ssh/sshd_config
    insertbefore: '^Match.*'
    line: '# Ansible Managed Key Exchange algorithms, encryption ciphers, and message authenthication code hashing functions'
    state: "{{ 'present' if ssh_enforce_ciphers else 'absent' }}"
    owner: root
    group: root
    mode: 0640
  when:
  - ansible_distribution == 'RedHat' or ansible_distribution == 'OracleLinux' or ansible_distribution == 'CentOS' or ansible_distribution == 'SLES'
  notify: restart sshd

- name: Configure SSH Key Exchange Algorithms
  lineinfile:
    dest: /etc/ssh/sshd_config
    insertafter: '# Ansible Managed Key Exchange algorithms, encryption ciphers, and message authenthication code hashing functions'
    line: "KexAlgorithms {{ 'curve25519-sha256@libssh.org,' if (((ansible_distribution == 'RedHat' or ansible_distribution == 'OracleLinux' or ansible_distribution == 'CentOS') and ansible_distribution_major_version|int == 7) or (ansible_distribution == 'SLES' and ansible_distribution_major_version|int >= 11)) else '' }}diffie-hellman-group-exchange-sha256{{ ',ecdh-sha2-nistp521,ecdh-sha2-nistp384,ecdh-sha2-nistp256' if ( nist_curves_enabled and (((ansible_distribution == 'RedHat' or ansible_distribution == 'OracleLinux' or ansible_distribution == 'CentOS') and ansible_distribution_major_version|int >= 7) or (ansible_distribution == 'SLES' and ansible_distribution_major_version|int >= 11))) else '' }}{{ ',diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha1,diffie-hellman-group1-sha1' if logjam_sha1_enabled else '' }}"
    regexp: '^(#)?KexAlgorithms.*$'
    state: "{{ 'present' if ssh_enforce_ciphers else 'absent' }}"
    owner: root
    group: root
    mode: 0640
  when:
  - ( ( ansible_distribution == 'RedHat' or ansible_distribution == 'OracleLinux' or ansible_distribution == 'CentOS' ) and ansible_distribution_major_version|int > 5 ) or ( ansible_distribution == 'SLES' and ansible_distribution_major_version|int > 10 )
  notify: restart sshd

- name: Configure SSH Ciphers
  lineinfile:
    dest: /etc/ssh/sshd_config
    line: "Ciphers {{ 'chacha20-poly1305@openssh.com,' if (((ansible_distribution == 'RedHat' or ansible_distribution == 'OracleLinux' or ansible_distribution == 'CentOS') and ansible_distribution_major_version|int == 7) or (ansible_distribution == 'SLES' and ansible_distribution_major_version|int >= 11)) else '' }}{{ 'aes128-gcm@openssh.com,aes256-gcm@openssh.com,' if (((ansible_distribution == 'RedHat' or ansible_distribution == 'OracleLinux' or ansible_distribution == 'CentOS') and ansible_distribution_major_version|int >= 7) or (ansible_distribution == 'SLES' and ansible_distribution_major_version|int >= 12)) else '' }}aes256-ctr,aes192-ctr,aes128-ctr{{ ',aes128-cbc,3des-cbc,blowfish-cbc,cast128-cbc,aes192-cbc,aes256-cbc,rijndael-cbc@lysator.liu.se' if ( cbc_ciphers_enabled and sweet32_ciphers_enabled ) else ',aes128-cbc,cast128-cbc,aes192-cbc,aes256-cbc,rijndael-cbc@lysator.liu.se' if ( cbc_ciphers_enabled and not sweet32_ciphers_enabled ) else '' }}{{ ',arcfour,arcfour128,arcfour256' if rc4_ciphers_enabled else '' }}"
    regexp: '^(#)?Ciphers.*$'
    insertafter: '^KexAlgorithms.*'
    state: "{{ 'present' if ssh_enforce_ciphers else 'absent' }}"
    owner: root
    group: root
    mode: 0640
  when:
  - ansible_distribution == 'RedHat' or ansible_distribution == 'OracleLinux' or ansible_distribution == 'CentOS' or ansible_distribution == 'SLES'
  notify: restart sshd

- name: Configure SSH HMACs For EL6 variants
  lineinfile:
    dest: /etc/ssh/sshd_config
    line: "MACs hmac-sha2-512,hmac-sha2-256,hmac-ripemd160@openssh.com,hmac-ripemd160{{ ',hmac-sha1' if sha1_mac_enabled else '' }}{{ ',hmac-md5' if md5_mac_enabled  else '' }}{{ ',hmac-sha1-96' if ( sha1_mac_enabled and truncated_mac_enabled ) else '' }}{{ ',hmac-md5-96' if ( md5_mac_enabled and truncated_mac_enabled ) else '' }}"
    regexp: '^(#)?MACs.*'
    insertafter: '^Ciphers.*'
    state: "{{ 'present' if ssh_enforce_ciphers else 'absent' }}"
    owner: root
    group: root
    mode: 0640
  when:
  - ( ansible_distribution == 'RedHat' or ansible_distribution == 'OracleLinux' or ansible_distribution == 'CentOS' ) and ansible_distribution_major_version|int == 6
  notify: restart sshd

- name: Configure SSH HMACs
  lineinfile:
    dest: /etc/ssh/sshd_config
    line: "MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-ripemd160-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-512,hmac-sha2-256,hmac-ripemd160,hmac-ripemd160@openssh.com,umac-128@openssh.com{{ ',hmac-sha1-etm@openssh.com,hmac-sha1' if sha1_mac_enabled else '' }}{{ ',hmac-md5-etm@openssh.com,hmac-md5' if md5_mac_enabled  else '' }}{{ ',hmac-sha1-96-etm@openssh.com,hmac-sha1-96' if ( sha1_mac_enabled and truncated_mac_enabled ) else '' }}{{ ',hmac-md5-96-etm@openssh.com,hmac-md5-96' if ( md5_mac_enabled and truncated_mac_enabled ) else '' }}"
    regexp: '^(#)?MACs.*'
    insertafter: '^Ciphers.*'
    state: "{{ 'present' if ssh_enforce_ciphers else 'absent' }}"
    owner: root
    group: root
    mode: 0640
  when:
  - ( ( ansible_distribution == 'RedHat' or ansible_distribution == 'OracleLinux' or ansible_distribution == 'CentOS' ) and ansible_distribution_major_version|int == 7 ) or ( ansible_distribution == 'SLES' and ansible_distribution_major_version|int >= 11 )

- name: SSH configure HMACs for Legacy Enterprise Linux
  lineinfile:
    dest: /etc/ssh/sshd_config
    line: "MACs hmac-ripemd160,hmac-ripemd160@openssh.com{{ ',hmac-sha1' if sha1_mac_enabled else '' }}{{ ',hmac-md5' if md5_mac_enabled else '' }}{{ ',hmac-sha1-96' if ( sha1_mac_enabled and truncated_mac_enabled ) else '' }}{{ ',hmac-md5-96' if ( md5_mac_enabled and truncated_mac_enabled ) else '' }}"
    regexp: '^(#)?MACs.*'
    insertafter: '^Ciphers.*'
    state: "{{ 'present' if ssh_enforce_ciphers else 'absent' }}"
    owner: root
    group: root
    mode: 0640
  when:
  - ( ( ansible_distribution == 'RedHat' or ansible_distribution == 'OracleLinux' or ansible_distribution == 'CentOS' ) and ansible_distribution_major_version|int == 5 ) or ( ansible_distribution == 'SLES' and ansible_distribution_major_version|int == 10 )
  notify: restart sshd
